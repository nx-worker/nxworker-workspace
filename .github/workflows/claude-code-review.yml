name: Claude Code Review

on:
  issue_comment:
    types: [created]

jobs:
  claude-review:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/review')

    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          filter: tree:0 # Optional, but recommended: reduce the size of the checkout with tree filtering, see https://github.blog/open-source/git/get-up-to-speed-with-partial-clone-and-shallow-clone/

      - uses: ./.github/actions/set-nx-shas

      - uses: ./.github/actions/setup-node-and-install

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.issue.number }}

            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Use the repository's CLAUDE.md for guidance on style and conventions. Be constructive and helpful in your feedback.

            Use `gh pr comment` with your Bash tool to leave your review as a comment on the PR.

          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/cli-reference for available options
          claude_args: |
            --allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*),Bash(npx nx:*),Bash(npm run:*),Bash(npm install*),Bash(npm ci*),mcp__nx__*"
            --mcp-config '{
              "mcpServers": {
                "nx": {
                  "type": "stdio",
                  "command": "npx",
                  "args": ["-y", "nx-mcp@latest"]
                }
              }
            }'
